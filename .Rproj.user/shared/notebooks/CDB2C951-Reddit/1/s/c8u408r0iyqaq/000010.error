{"frames":[{"func":"get_thread_content(reddit_diabetes_urls$url)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"lapply(urls, parse_thread_url)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"FUN(X[[i]], ...)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"url_to_json(request_url %+% \".json?limit=500\")","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"tryCatch(RJSONIO::fromJSON(readLines(utils::URLencode(throttle(url)), \n    warn = FALSE)), error = function(e) stop(\"Cannot read from Reddit, check your inputs or internet connection\"))","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"tryCatchList(expr, classes, parentenv, handlers)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"tryCatchOne(expr, names, parentenv, handlers[[1L]])","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"value[[3L]](cond)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"stop(\"Cannot read from Reddit, check your inputs or internet connection\")","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0}],"message":"Error in value[[3L]](cond) : \n  Cannot read from Reddit, check your inputs or internet connection\n"}